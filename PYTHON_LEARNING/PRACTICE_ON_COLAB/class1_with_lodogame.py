# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wlGO5P4Fzm6xroVrL4SexLjAlVtjWXNw
"""

from re import S
# txt ki file hm text ke liye use krty hen jesy nodepad
file = open("faiza_naaz_queen.txt", "w+")# w+ ka matlb he ke kis form me kri he open yani hmy bnani he ya read krni he ya update bydefaul wo read pr hota he
# +ka nishan isi liye lgaty hen ke write krny ke badread bhi krna he
# isy file pen ho jaygi or file mojood hi na ho to wo creat ho jaygi
file.write("\n hello faiza")
# write matlb hmny jo fike bnai thi osmy koch likh diya he add kr diya he file mree mojood sab text ko delete krdega or bs ye jo write me likha he ye rakhyga lekin
# hm chahty hen ke wo bhi rhy or ye bhi add hoto hm use krengy append() ko

file.seek(0)


    # "seek(0)" jb hm write krky read krty hen to wo on chizon ko reasd krky print ktyga jo curser ke bad hota he or curser
    # khod sy end me chaa jata he to koch print hi nhi hoa to hm seek 0 likhengy ke files ke bhi apny index number hoty he
    # seek ye krta he ke curser ki position ko set krta he to seek (0) ka matlb he ke curser ko 0 index pr set krdo to
    # 0 to sbsy phla hota he word to wo sbsy phly jayga or wha curser rakh dega to wo curser apny bad wala sb print krdega

line=file.read()
file.write("hello faiza")
print(line)
#
file.close()
# close krna lazmi he wrna ye open rhygi o msa hoga



"""# New Section"""

# "with open" ka use kar ke file ko open kar rahe hain
# with open se ye bhi hota he ke hmy isko close nhi krna prhta
# Saath hi saath, yeh mode reading ("r") aur writing ("w") dono allow karta hai.
with open("faiza_naaz.txt", "w+") as new_file: #ya r+ bhi kr skty or hm ag x likhty hen to wo agr file hogi tohi open hogi agr nhi hogi to nhi hogi

    # "write" function ka use kar ke file ke andar text likh rahe hain
    new_file.write("hello faiza")
    new_file.seek(0)

    # "read()" function ka use kar ke file ka pura content read kar ke print kar rahe hain  write waly work ko hm read ke
    # method sy read krty hen
    print(new_file.read())

with open("faiza_naaz.txt", "a+") as new_file:  # as krky hmny iso reasign krdiya name or a+ sy ye hoga ke porana text bhi ayga oe jo new likhengy wo bhi sath add hota jayga

    # "write" function ka use kar ke file ke andar text likh rahe hain
    new_file.write("\n hello naaz")
    new_file.seek(0)

    # "read()" function ka use kar ke file ka pura content read kar ke print kar rahe hain  write waly work ko hm read ke
    # method sy read krty hen
    print(new_file.read())

from google.colab import files
# files matlb ye hmy jo sidebar me files hoti he osko acces krny ki ijazat deta he
uploaded = files.upload()
# isy hm apni file me koch upload krwa rhyhe computer sy ye code likhny sy fileupload krny ka option generat hoga osy hm koch bhi upload krengy
# or wo file pic save bhi ho jaygi side me

# prompt: suggest some interesting applications with code for bigners develper

from PIL import Image, ImageDraw, ImageFont
import random
import os

def generate_admit_card(name, roll_number, image_path=None):
    """Generates a customized admit card image.

    Args:
        name: The student's name.
        roll_number: The student's roll number.
        image_path: Optional path to an image to include on the card.
    """
    try:
        # Create a new image with a light blue background
        img = Image.new('RGB', (600, 400), color=(173, 216, 230))
        d = ImageDraw.Draw(img)

        # Load a font (replace with a font file on your system)
        font_path = "arial.ttf"  # Or any other .ttf file
        if os.path.exists(font_path):
            font = ImageFont.truetype(font_path, 20)
        else:
            font = ImageFont.load_default()

        # Add text elements
        d.text((50, 50), "PIAIC Admit Card", font=font, fill=(0, 0, 0))
        d.text((50, 100), f"Name: {name}", font=font, fill=(0, 0, 139))  # Dark blue
        d.text((50, 150), f"Roll Number: {roll_number}", font=font, fill=(139, 0, 0))  # Dark red
        d.line([(50, 180), (550, 180)], fill=(0, 0, 0), width=2)

        # Add an image if provided
        if image_path and os.path.exists(image_path):
            try:
                random_image = Image.open(image_path)
                random_image = random_image.resize((100, 100))
                img.paste(random_image, (400, 250))
            except Exception as e:  # Catch potential image errors
                print(f"Error loading or pasting image: {e}")
                d.text((400, 250), "Image Error", font=font, fill=(0, 0, 0))
        elif image_path:
          print(f"Image file not found: {image_path}")
          d.text((400, 250), "Image not found", font=font, fill=(0,0,0))


        # Save the image (replace with your desired path)
        img.save("admit_card.png")
        print("Admit card saved as admit_card.png")

        # Display the image (optional)
        # img.show()  # This might not work in all environments (Colab)

    except Exception as e:
        print(f"An error occurred: {e}")


# Example usage:
generate_admit_card("Alice Johnson", "2023-AIC-007", "random_image.jpg") # Replace with an existing image file

# Example without an image:
generate_admit_card("Bob Williams", "2023-AIC-008")

# prompt: create a simple dice game(ludo) with six sides of the dice make it fun game between 2 bayers

import random

def roll_dice():
  return random.randint(1, 6)

def play_ludo(player1_name, player2_name):
  player1_position = 0
  player2_position = 0

  while True:
    input(f"{player1_name}, press Enter to roll the dice...")
    player1_roll = roll_dice()
    print(f"{player1_name} rolled a {player1_roll}")
    player1_position += player1_roll

    if player1_position >= 50:
      print(f"\nCongratulations, {player1_name} wins!")
      break

    input(f"{player2_name}, press Enter to roll the dice...")
    player2_roll = roll_dice()
    print(f"{player2_name} rolled a {player2_roll}")
    player2_position += player2_roll

    if player2_position >= 50:
      print(f"\nCongratulations, {player2_name} wins!")
      break

    print(f"\nCurrent Positions: {player1_name} - {player1_position}, {player2_name} - {player2_position}")


if __name__ == "__main__":
  player1 = input("Enter Player 1's name: ")
  player2 = input("Enter Player 2's name: ")
  play_ludo(player1, player2)